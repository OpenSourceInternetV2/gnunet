mainmenu "GNUnet Server Configuration"

menu "Meta-configuration" "Meta"
	config EXPERIMENTAL
	bool "Prompt for development and/or incomplete code"
	help
               	If EXPERIMENTAL is set to NO, options for experimental code are
                not shown.  If in doubt, use NO.

		Some options apply to experimental code that maybe in a state 
		of development where the functionality, stability, or the level of
		testing is not yet high enough for general use.  These features 
		are said to be of "alpha" quality.   If a feature is currently in 
               	alpha, uninformed use is discouraged (since the developers then
                do not fancy "Why doesn't this work?" type messages).

       	        However, active testing and qualified feedback of these features
               	is always welcome.  Users should just be aware that alpha features
		may not meet the normal level of reliability or it may fail to work
		in some special cases.  Bug reports are usually welcomed by the 
               	developers, but please read the documents <file://README> and 
                <http://gnunet.org/faq.php3> and use <https://gnunet.org/mantis/>
       	        for how to report problems.
  
	config ADVANCED
  	bool "Show options for advanced users"
	help
		These are options that maybe difficult to understand for the
		beginner.  These options typically refer to features that
       	        allow tweaking of the installation.  If in a hurry, say NO.
  
	config RARE
	bool "Show rarely used options"
	help
		These are options that hardly anyone actually needs.
		If you plan on doing development on GNUnet, you may want to
       	        look into these.  If in doubt or in a hurry, say NO.
endmenu

menu "General settings" "GNUNETD"
	config GNUNETD_HOME
	string "Full pathname of GNUnet HOME directory"
	default ""
	help
		This gives the root-directory of the GNUnet installation. Make
		sure there is some space left in that directory. :-)  Users inserting
		or indexing files will be able to store data in this directory
		up to the (global) quota specified below.  Having a few gigabytes
		of free space is recommended.
		Default: GNUNETD_HOME     = /var/lib/GNUnet

	config HELLOEXPIRES
	int "How many minutes should peer advertisements last?"
	default 1440
	depends on Meta::ADVANCED
	help
		How many minutes is the current IP valid?  (GNUnet will sign HELLO
		messages with this expiration timeline. If you are on dialup, 60
		(for 1 hour) is suggested. If you are having a static IP address,
		you may want to set this to a large value (say 14400).  The default
		is 1440 (1 day). If your IP changes periodically, you will want to
		choose the expiration to be smaller than the frequency with which
		your IP changes.
		The largest legal value is 14400 (10 days).
		Default: HELLOEXPIRES     = 1440

	config LOGLEVEL
	string "Log level"
	default "WARNING"
	depends on Meta::ADVANCED
	help
		Loglevel, how much should be logged? You can use NOTHING, FATAL,
		ERROR, FAILURE, WARNING, MESSAGE, INFO, DEBUG, CRON or EVERYTHING
		(which log more and more messages in this order). Default is
		WARNING.

	config LOGFILE
	string "Where should logs go by default"
	default "$GNUNETD_HOME/logs"
	depends on Meta::ADVANCED
	help
		In which file should gnunetd write the logs?  If you specify
		nothing, logs are written to stderr (and note that if gnunetd runs
		in the background, stderr is closed and all logs are discarded).
		Default: LOGFILE         = $GNUNETD_HOME/logs

	config KEEPLOG
	int "How long should logs be kept"
	default 0
	depends on Meta::ADVANCED
	help
		How long should logs be kept? If you specify a value greater
		than zero, a log is created each day with the date appended
		to its filename. These logs are deleted after $KEEPLOG days.
		To disable this function, set this setting to its default   
		value 0.

	config PIDFILE
	string "Where should gnunetd write the PID"
	default "$GNUNETD_HOME/gnunet.pid"
	depends on Meta::ADVANCED
	help
		In which file should gnunetd write the process-id of the server?  If
		you run gnunetd as root, you may want to choose
		/var/run/gnunetd.pid. It's not the default since gnunetd may not
		have write rights at that location.
		Default: PIDFILE         = $GNUNETD_HOME/gnunetd.pid

	config HOSTS
	string "Where should gnunetd keep the list of peers"
	default "$GNUNETD_HOME/data/hosts/"
	depends on Meta::ADVANCED
	help
		This directory should be made available periodically --- it contains
		information how to join GNUnet that is in no way private to the
		local node.  This directory can be shared between nodes AND should
		be put on a public web-server (if possible).  You should find a list
		of known hosts under http://gnunet.org/hosts/, you can copy
		those files into this directory.
		
		If you specify a HOSTLISTURL, the directory will be automatically
		populated by gnunetd with an initial set of nodes.
		Default: HOSTS   	= $GNUNETD_HOME/data/hosts/

	config HOSTLISTURL
	string "Where can GNUnet find an initial list of peers"
	depends on Meta::ADVANCED
	default "http://gnunet.org/hostlist http://mikael.karlsson.com/hostlist http://gnunet.mine.nu:8081/hostlist"
	help
		GNUnet can automatically update the hostlist from the web. While
		GNUnet internally communicates which hosts are online, it is
		typically a good idea to get a fresh hostlist whenever gnunetd
		starts from the WEB. By setting this option, you can specify from
		which server gnunetd should try to download the hostlist. The
		default should be fine for now.
		
		The general format is a list of space-separated URLs.  Each URL must
		have the format http://HOSTNAME/FILENAME
		
		If you want to setup an alternate hostlist server, you must run a
		permanent node and "cat data/hosts/* > hostlist" every few minutes
		to keep the list up-to-date.
		
		If you do not specify a HOSTLISTURL, you must copy valid hostkeys to
		data/hosts manually.
		Default: HOSTLISTURL = "http://gnunet.org/hostlist http://mikael.karlsson.com/hostlist http://gnunet.mine.nu:8081/hostlist"
    
	config HTTP-PROXY
	string "HTTP Proxy Server"
	default ""
	depends on Meta::ADVANCED
	help
		If you have to use a proxy for outbound HTTP connections,
		specify the proxy configuration here.  Default is no proxy.
  
	config HTTP-PROXY-PORT
	int "HTTP Proxy Port"
	range 1 65535
	default 1080
	depends on Meta::ADVANCED
	help
		If you have to use a proxy for outbound HTTP connections,
		specify the proxy configuration here.  Default is no proxy.
  
	config APPLICATIONS
	string "Which applications should gnunetd support?"
	default "advertising fs getoption stats traffic"
	depends on Meta::ADVANCED
	help
		Which applications should gnunetd support? Specify the name of the
		dynamic shared object (DSO) that implements the service in the
		gnunetd core here. Separate multiple modules with spaces.
		
		Whenever this option is changed, you MUST run gnunet-update.
		
		Currently, the available applications are:
		advertising: always load this one
		getoption: probably a good idea, too!
		
		stats: statistics - for gnunet-stats
		traffic: traffic analysis 
		fs: file sharing
		chat: broadcast chat (demo-application, ALPHA quality, at best)
		tbench: benchmark tool for transport performance
		tracekit: GNUnet topology visualization toolkit
		
		The chat, tbench and tracekit protocols are potential security risks
		and have been engineered for testing GNUnet or demonstrating how
		GNUnet works. They should be used with caution.
		
		Using the fs tools for downloading may require the traffic module
		to be loaded!  Various GNUnet-tools depend on getoption.
		
		Default: APPLICATIONS = "advertising fs getoption stats traffic"

	config TRANSPORTS
	string "Which transport mechanisms are available?"
	default "udp tcp http nat"
	depends on Meta::ADVANCED
	help
		Which transport mechanisms are available? Use space-separated list
		of the modules, e.g.  "udp smtp tcp". The order is irrelevant, each
		protocol has a build-in cost-factor and this factor determines which
		protocols are preferred.  
		
		The available transports at this point are udp, tcp, http, smtp,
		tcp6, udp6 and the special 'nat' service.
		
		Loading the 'nat' and 'tcp' modules is required for peers behind NAT
		boxes that cannot directly be reached from the outside.  Peers that
		are NOT behind a NAT box and that want to *allow* peers that ARE
		behind a NAT box to connect must ALSO load the 'nat' module.  Note
		that the actual transfer will always be via tcp initiated by the peer
		behind the NAT box.
		
		Usually, the default is just fine for most people.
		Choices are: "udp tcp udp6 tcp6 nat http smtp"
		Default: TRANSPORTS = "udp tcp http nat"

	config PROCESS-PRIORITY
	string "Process priority"
	default "NORMAL"
	depends on Meta::ADVANCED
	help
		At which priority should the GNUnet server run? If you don't want it
		to interfere with other applications, set this to "BELOW NORMAL" or "IDLE".
		Acceptable values are "NORMAL", "BELOW NORMAL", "ABOVE NORMAL", "HIGH",
		"IDLE" and nice(1) increments (a numeric value between -20 and 19, keep
		in mind that values smaller than 0 require root privileges).
		Default is "NORMAL".

	config USER
	string "GNUnet user"
	default ""
	depends on Meta::ADVANCED
	help
		As which user account should gnunetd run?
		Empty means "current user". On computer startup, it is root/SYSTEM.
		Under Windows, this setting affects the creation of a new
		system service only.

	config GROUP
	string "GNUnet group"
	default ""
	depends on Meta::ADVANCED
	help
		As which group account should gnunetd run?
		Empty means current group under Unix. It has no meaning under Windows.

	config AUTOSTART
	bool "Start GNUnet daemon automatically"
	default n
	depends on Meta::RARE
	help
		This is used by the configuration wizards to remember whether to start
		the GNUnet daemon at computer startup.

endmenu

if Meta::ADVANCED	
	menu "Modules" "MODULES"
		config sqstore
		string "Which database should be used?"
		default "sqstore_sqlite"
		help
			Which database should be used?  The options
			are "sqstore_sqlite" and "sqstore_mysql".
			Default is "sqstore_sqlite".  You must run
			gnunet-update after changing this value!
			
			In order to use sqstore_mysql, you must configure
			the mysql database, which is relatively simple.
			Read the file doc/README.mysql for how to setup
			mysql.
			The default is "sqstore_sqlite".
	
		config topology
		string "Which topology should be used?"
		default "topology_default"
		help
			Which topology should be used?  The only
			options at the moment are "topology_default"
                        and "topology_f2f".  In default mode, GNUnet
			will try to connect to a diverse set of peers,
			and welcome connections from anyone.  In
			f2f (friend-to-friend) mode, GNUnet will only 
                        allow connections from peers that are explicitly 
                        listed in a FRIENDS file.  Note that you can
                        list peers in the FRIENDS file that run in 
                        default mode.

                        Use f2f only if you have (trustworthy) friends
                        that use GNUnet and are afraid of establishing
                        (direct) connections to unknown peers.
			
			The default is "topology_default".
	endmenu
endif

menu "Network" "NETWORK"
	config PORT
	int "Client/Server Port"
	range 1 65535
	default "2087"
	depends on Meta::ADVANCED
	help
		Which is the client-server port that is used between gnunetd and the
		clients (TCP only).  You may firewall this port for non-local
		machines (but you do not have to since GNUnet will perform access
		control and only allow connections from machines that are listed
		under TRUSTED).
		Default: PORT = 2087

	config INTERFACE
	string "Interface to probe for external IP"
	help
		Set if GNUnet fails to determine your IP.  GNUnet first tries to
		determine your IP by looking at the IP that matches the interface
		that is given with the option INTERFACE.
		Under Windows, specify the ID reported by "gnunet-win-tool -n".
  
	config IP
	string "Forced value of external IP or hostname"
	help
		If obtaining the external IP from an interface will not result
		in the right information, use the IP setting.  Setting IP can
                be used to specify the external IP directly or to make GNUnet
		lookup the external IP using DNS.
		
		This is typically the best option if you are behind a router/gateway
		that performs network address translation (NAT).  If the router has
		a fixed external IP, use that IP.  If the router itself obtains its
		IP dynamically (say via DHCP), use the DNS lookup in combination with
		DynDNS.  In either case make sure that the router forwards incoming
		UDP and TCP messages on the GNUnet port (default: 2086) to the 
		GNUnet host in the local network.  If this is not possible, read
		about the LIMITED option for NAT.
		
		If in doubt, try without.  Default is empty.
  
	config HELLOEXCHANGE
	bool "Participate in network topology management"
	default y
	depends on Meta::ADVANCED
	help
		If this host is connected to two networks, a private which is not
		reachable from the Internet and that contains GNUnet clients and to
		a public network, typically the Internet (and is this host is thus
		in the position of a router, typically doing NAT), then this option
		should be set to 'NO'. It prevents the node from forwarding HELLOs
		other than its own. 

                If in doubt, use YES.  Default is YES.
  
	config TRUSTED
	string "IPs allowed to use gnunetd server"
	default "127.0.0.0/8;"
	depends on Meta::ADVANCED
	help
		This option specifies which hosts are trusted enough
		to connect as clients (to the TCP port).  This is useful if you run
		gnunetd on one host of your network and want to allow all other
		hosts to use this node as their server.  By default, this is set to
		'loopback only'.  The format is IP/NETMASK where the IP is specified in
		dotted-decimal and the netmask either in CIDR notation (/16) or in
		dotted decimal (255.255.0.0). Several entries must be separated by a
		semicolon, spaces are not allowed. 

		Default is "127.0.0.0/8;".

endmenu

menu "Friend-to-Friend" "F2F"
	config FRIENDS
	string "List of friends for friend-to-friend topology"
	default "$GNUNETD_HOME/friends"
	depends on Meta::ADVANCED
	help
		Specifies the name of a file which contains a list of GNUnet peer IDs
		that are friends.  If used together with 

                [MODULES] topology = topology_f2f

                this will ensure that GNUnet only connects to these peers (via
		any available transport).
endmenu

menu "Resource limitations" "LOAD"

	config BASICLIMITING
	bool "Basic bandwidth limiting"
	default y
	help
		Use basic bandwidth limitation? (YES/NO).  If in doubt, say YES.

                Basic bandwidth limitation (YES) means simply that the bandwidth limits
                specified apply to GNUnet and only to GNUnet.  If set to YES, you
                simply specify the maximum bandwidth (upstream and downstream) 
                that GNUnet is allowed to use and GNUnet will stick to those
                limitations.  This is useful if your overall bandwidth is so large that
                the limit is mostly used to ensure that enough capacity is left for
                other applications.  Even if you want to dedicate your entire connection
                to GNUnet you should not set the limits to values higher than what you
                have since GNUnet uses those limits to determine for example the number
                of connections to establish (and it would be inefficient if that 
                computation yields a number that is far too high).  

                While basic bandwidth limitation is simple and always works, there are
                some situations where it is not perfect.  Suppose you are running
                another application which performs a larger download.  During that
                particular time, it would be nice if GNUnet would throttle its
                bandwidth consumption (automatically) and resume using more bandwidth
                after the download is complete.  This is obviously advanced magic since
                GNUnet will have to monitor the behavior of other applications. 
                Another scenario is a monthly cap on bandwidth imposed by your ISP,
                which you would want to ensure is obeyed.  Here, you may want
                GNUnet to monitor the traffic from other applications to ensure that
                the combined long-term traffic is within the pre-set bounds.  Note
                that you should probably not set the bounds tightly since GNUnet may
                observe that the bounds are about to be broken but would be unable to
                stop other applications from continuing to use bandwidth.

                If either of these two scenarios applies, set BASICLIMITING to NO.
                Then set the bandwidth limits to the COMBINED amount of traffic that
                is accepable for both GNUnet and other applications.  GNUnet will
                then immediately throttle bandwidth consumption if the short-term
                average is above the limit, and it will also try to ensure that the
                long-term average is below the limit.  Note however that using NO
                can have the effect of GNUnet (almost) ceasing operations after
                other applications perform high-volume downloads that are beyond the
                defined limits.  GNUnet would reduce consumption until the long-term
                limits are again within bounds.

                NO only works on platforms where GNUnet can monitor the amount of
                traffic that the local host puts out on the network.  This is only
                implemented for Linux and Win32.  In order for the code to work, GNUnet
                needs to know the specific network interface that is used for the
                external connection (after all, the amount of traffic on loopback
                or on the LAN should never be counted since it is irrelevant).

		Default is: BASICLIMITING = YES

	config INTERFACES
	string "Network interface to monitor"
	depends on !Meta::BASICLIMITING
	help
		For which interfaces should we do accounting?  GNUnet will evaluate
		the total traffic (not only the GNUnet related traffic) and adjust
		its bandwidth usage accordingly. You can currently only specify a
		single interface. GNUnet will also use this interface to determine
		the IP to use. Typical values are eth0, ppp0, eth1, wlan0, etc.
		'ifconfig' will tell you what you have.  Never use 'lo', that just
		won't work.
		Under Windows, specify the index number reported by
		 "gnunet-win-tool -n".

	config MAXNETDOWNBPSTOTAL
	int "Maximum download (bytes per second)"
	default 50000
	help
		Bandwidth limit for incoming traffic in bytes per second.  
		Default is 50000.
  
	config MAXNETUPBPSTOTAL
	int "Maximum upload (bytes per second)"
	default 50000
	help
		Bandwidth limit for outgoing traffic in bytes per second. 
		Default is 50000.

	config MAXCPULOAD
	int "Maximum CPU load (percentage)"
	range 0 100
	default 50
	help
		Which CPU load can be tolerated.  Load here always refers to the total
		system load, that is it includes CPU utilization by other processes.
		A value of 50 means that once your 1 minute-load average goes over 50%	
		non-idle, GNUnet will try to reduce CPU consumption until the load goes 
		under the threshold.  Reasonable values are typically between 50 and 90.
		Machines dedicated to running GNUnet maybe fine with 99.

		Default is 50.
    
endmenu

menu "Transports" "Transports"

    if Meta::ADVANCED

	menu "UDP Transport" "UDP"

		config PORT
		int "Port"
		range 0 65535
		default 2086
		help
			To which port does GNUnet bind? Default is 2086 and there is usually
			no reason to change that.

		config BLACKLIST
		string "Disallow connections from"
		default "127.0.0.1/8;172.16.0.0/12;192.168.0.0/16;10.0.0.0/255.0.0.0;"
		help
			With this option, you can specify which networks you do NOT want to
			connect to. Usually you will want to filter loopback (127.0.0.1,
			misconfigured GNUnet hosts), virtual private networks, [add a class
			C network here], 192.168.0.0, 172.16.0.0 and 10.0.0.0 (RFC
			1918). The format is IP/NETMASK where the IP is specified in
			dotted-decimal and the netmask either in CIDR notation (/16) or in
			dotted decimal (255.255.0.0). Several entries must be separated by a
			semicolon, spaces are not allowed.  Notice that if your host is on a
			private network like the above, you will have to configure your NAT
			to allow incoming requests and you will want to modify this option.
			The idea behind this option is not to discriminate against NAT users
			but to ensure that hosts only attempt to connect to machines that
			they have a chance to actually reach.  Of course, you could also use
			it against known adversaries that have a small IP range at their
			disposal :-) 
			
			Example (and default):
			127.0.0.1/8;172.16.0.0/12;192.168.0.0/16;10.0.0.0/255.0.0.0;
	  
		config MTU
		int "MTU"
		default 1472
		depends on Meta::RARE
		help
		  	The MTU to use. Do not use more than your OS
			(and firewall) can support. Typically, your 
			network-MTU - 28 is optimal, for ethernet, this
			is 1472, the default. Do not use less than 1200.
		
			The default is 1472, which is also used if you specify nothing.

	endmenu
  
	menu "TCP Transport" "TCP"

		config PORT
		int "Port"
		range 0 65535
		default 2086
		help
			To which port does GNUnet bind? Default is 2086 and there is usually
			no reason to change that.  Make sure that this port does not
			conflict with the port for GNUnet clients (section NETWORK), which
			defaults to 2087.

		config BLACKLIST
		string "Disallow connections from"
		default "127.0.0.1/8;172.16.0.0/12;192.168.0.0/16;10.0.0.0/255.0.0.0;"
		help
			With this option, you can specify which networks you do NOT want to
			connect to. Usually you will want to filter loopback (127.0.0.1,
			misconfigured GNUnet hosts), virtual private networks, [add a class
			C network here], 192.168.0.0, 172.16.0.0 and 10.0.0.0 (RFC
			1918). The format is IP/NETMASK where the IP is specified in
			dotted-decimal and the netmask either in CIDR notation (/16) or in
			dotted decimal (255.255.0.0). Several entries must be separated by a
			semicolon, spaces are not allowed.  Notice that if your host is on a
			private network like the above, you will have to configure your NAT
			to allow incoming requests and you will want to modify this option.
			The idea behind this option is not to discriminate against NAT users
			but to ensure that hosts only attempt to connect to machines that
			they have a chance to actually reach.  Of course, you could also use
			it against known adversaries that have a small IP range at their
			disposal :-)
			Example (and default):
			BLACKLIST = 127.0.0.1/8;192.168.0.0/16;10.0.0.0/255.0.0.0; 
	  
	endmenu

    endif

	menu "NAT" "NAT"
	
		config LIMITED
		bool "Is this machine unreachable behind a NAT?"
		default n
		help
			Is this machine behind a NAT that does not allow
			connections from the outside to the GNUnet port?
			(if you can configure the NAT box to allow
			direct connections from other peers, set this
			to NO).  Set this only to YES if other peers
			cannot contact you directly via TCP or UDP.
			If you set this to NO, you should also set the
			TCP and UDP port to '0' to indicate that you
			cannot accept inbound connections.

	endmenu
 
    if Meta::EXPERIMENTAL && Meta::RARE && Meta::ADVANCED
  
  	menu "UDP over IPv6" "UDP6"
  		  		
  		config PORT
  		int "Port"
  		range 0 65535
  		default 2088

			config MTU
			int "MTU"
			default 1452
			depends on Meta::RARE
			
			config BLACKLIST
			string "Disallow connections from"
  	
  	endmenu

  	menu "TCP over IPv6" "TCP6"
  		  		
  		config PORT
  		int "Port"
  		range 0 65535
  		default 2088

			config MTU
			int "MTU"
			default 1440
			depends on Meta::RARE
			
			config BLACKLIST
			string "Disallow connections from"
  	
  	endmenu
  
    endif
  
    if Meta::ADVANCED
  
	  menu "SMTP" "SMTP"

		config EMAIL
		string "Receiver address for inbound E-mail"
		default "foo@bar.com"
		help
			E-mail address to use to receive messages.  Do not specify anything
			if you do not want to allow SMTP as a receiver protocol; you can
			still *send* email to establish connections in that case.  Example:
			EMAIL = foo@bar.com

		config MTU
		int "MTU"
		default 65528
		help
			MTU for the E-mail. How large should the E-mails be that we send
			out? Default is 65528 (bytes).

	  	config PORT
	  	int "Port of the SMTP server for outbound mail"
	  	range 1 65535
	  	default 25
	  	help
		  	Port of the SMTP server for outbound mail.  If not specified, the
			TCP/SMTP entry from /etc/services is consulted.  Default is 25.

		config SERVER
		string "Hostname of the SMTP server"
		default localhost
		help
			Hostname of the SMTP server. Default is "localhost".
			
		config SENDERHOSTNAME
		string "Hostname of the sender host"
		default "myhost.example.com"
		help
			Hostname of the sender host to use in the HELLO message of the SMTP
			protocol (not to be confused with the HELLO in the GNUnet p2p
			protocol). Pick a hostname that works for your SMTP server. This
			hostname has nothing to do with the hostname of the SMTP server or
			your E-mail sender address (though those names should work in most
			cases). In fact, it often does not even have to exist as a real
			machine. Example: "myhost.example.com"

		config FILTER
		string "Filter-line to use in the E-mail header"
		default "X-mailer: GNUnet"
		help
			Filter-line to use in the E-mail header. This filter will be
			included in the GNUnet-generated E-mails and should be used to
			filter out GNUnet traffic from the rest of your E-mail. Make sure
			that the filter you choose is highly unlikely to occur in any other
			message.
			
			Examples:
			FILTER = "X-mailer: GNUnet"
			FILTER = "Subject: foobar5252"

			In order to make the SMTP transport work, add the following line
			to your ~/.procmailrc file:

			:0:
			* ^X-mailer: GNUnet
			/tmp/gnunet.smtp
			# where do you want your other e-mail delivered to
			# (default: /var/spool/mail/)
			:0:
			/var/spool/mail/

			You can test your configuration with

			$ gnunet-transport-check -t smtp -T 60000

			Make sure to poll your e-mail within the minute that
			gnunet-transport-check waits for a response.


		config PIPE
		string "Name of the pipe via which procmail sends filterd E-mails"
		default "/tmp/gnunet.smtp"
		help
			Name of the pipe via which procmail sends the filtered E-mails to
			the node.  Default is /tmp/gnunet.smtp

	  endmenu
	  
	  menu "HTTP" "HTTP"
	  
	  	config PORT
	  	int "Port"
	  	range 0 65535
	  	default 1080
	  	
		config BLACKLIST
		string "Disallow connections from"
		default "127.0.0.1/8;172.16.0.0/12;192.168.0.0/16;10.0.0.0/255.0.0.0;"	  	
	  
	  endmenu
  
    endif

endmenu

menu "Applications" ""

	menu "Anonymous file sharing" "FS"

		config QUOTA
		int "MB of diskspace GNUnet can use for anonymous file sharing"
		default 1024
		help
			How much disk space (MB) is GNUnet allowed to use for anonymous file
			sharing?  This does not take indexed files into account, only the
			space directly used by GNUnet is accounted for.  GNUnet will gather
			content from the network if the current space-consumption is below
			the number given here (and if content migration is allowed below).
			
			IMPORTANT:
			Note that if you change the quota, you need to run gnunet-update,
			otherwise your databases will be inconsistent and gnunetd will
			refuse to work.  Default is 1024 (1 GB)

		config ACTIVEMIGRATION
		bool "Allow migrating content"
		default y
		depends on Meta::ADVANCED
		help
			Should we participate in content migration?  If you say yes here,
			GNUnet will migrate content to your server, and you will not be able
			to control what data is stored on your machine.  This option has
			advantages and disadvantages.
			
			If you activate it, you can claim for *all* the non-indexed (-n to
			gnunet-insert) content that you did not know what it was even if an
			adversary takes control of your machine.
			
			If you do not activate it, it is obvious that you have knowledge of
			all the content that is hosted on your machine and thus can be
			considered liable for it.  
			
			So if you think that the legal system in your country has gone
			postal, you may want to set it to "NO" and make sure that the
			content you put on your machine does not get you into too much
			trouble if an adversary takes control of your machine.  If you think
			that you're safe if you host content that you don't know anything
			about (like an ISP) or that you don't have to fear prosecution
			no-matter-what, turn it to YES, which will also improve GNUnet's
			performance and thereby your results.
			
			Note that as long as the adversary is not really powerful (e.g. can
			not take control of your machine), GNUnet's build-in anonymity
			mechanisms should protect you from being singled out easily.
			
			Currently, activating active migration can cause some problems when
			the database is getting full (gdbm reorganization can take very,
			very long and make GNUnet look like it hangs for that time). Thus if
			you turn it on, you may want to disable it after you hit the
			quota. A better content management system should solve this problem
			in the near future... [at the time of GNUnet 0.6.1c, the MySQL 
			database module already works well even if the db is full.]
			Default is YES.

		config DIR
		string "Directory for storing FS data"
		default "$GNUNETD_HOME/data/fs/"
		depends on Meta::ADVANCED
		help
			Where to store the FS related data (content, etc)?
		
		config INDEX-DIRECTORY
		string "Where to store indexed files"
		default "$GNUNETD_HOME/data/shared/"
		depends on Meta::ADVANCED
		help
			Where to store indexed files (NEW!)
			Note that you MUST not copy files directly to this
			directory.  gnunet-insert (or gnunet-gtk) will copy
			the files that you index to this directory.  With the
			-l option you instead create a link (if gnunetd and
			gnunet-insert run on the same machine) instead.
			
			The QUOTA option does NOT apply for this directory.
			To limit how much can be placed in this directory
			set the option INDEX-QUOTA.  Files that are merely
			linked do not count towards the quota.
			
			If you uncomment this option gnunetd will refuse
			content indexing requests (insertion will still be
			possible).
			
			Default is $GNUNETD_HOME/data/shared/

		config INDEX-QUOTA
		int "Indexing quota"
		default 8192
		help
			Indexing quota.  Default is 8192.
		

	endmenu
	
    if Meta::ADVANCED
	
	menu "MySQL" "MYSQL"
		config DELAYED
		bool "Delayed operations"
		default n
		help
			If you suffer from too slow index/insert speeds, 
			you might try to set this to YES for a small
			efficiency boost.  If you run into any trouble
			because of it, you're on your own.
			Default: NO
	endmenu
		
    endif
	
    if Meta::EXPERIMENTAL && Meta::RARE && Meta::ADVANCED
	
	menu "GNUnet Testbed" "TESTBED"
		
		config REGISTERURL
		string "Where should we register the testbed service?"
		default "http://gnunet.org/testbed/"
		help
			Where should we register the testbed service?
			Default is "http://gnunet.org/testbed/"				
		
		config ALLOW_MODULE_LOADING
		bool "Allow to load and unload modules"
		default n
		help
			Is the testbed operator allowed to load and
			unload modules? (somewhat of a security risk!)
			Default is NO.

		config UPLOAD-DIR
		string "Upload directory"
		default "$GNUNETD_HOME/testbed"
		help
			Where should file-uploads go?
			Default is $GNUNETD_HOME/testbed
			
		config LOGIN
		string "Login-name for SSH-tunnel"
		default 2087
		help
			Login-name for SSH-tunnel (for secure testbed
			connections).  Without login name the testbed-server
			will try to make a direct TCP connection to the
			application port (default: 2087).
		
	endmenu
			
	menu "DHT" "DHT"
		config BUCKETCOUNT
		int "Number of buckets to use"
		default 160
		help
			Number of buckets to use (determines memory requirements)
			Default (and maximum) is 160.

		config MASTER-TABLE-SIZE
		int "Amount of memory (in bytes) to use for the master table"
		default 65536
		help
			Amount of memory (in bytes) to use for the master table
			(table that caches table-to-peer mappings).
			Default is 65536.
	endmenu

    endif
	
    if Meta::RARE
	menu "GAP" "GAP"
		config TABLESIZE
		int "Size of the routing table."
		default 65536
		help
			Size of the routing table.
			Default: 65536
	endmenu
    endif
	
endmenu
	

